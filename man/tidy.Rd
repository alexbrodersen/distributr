% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_results.R
\name{tidy}
\alias{tidy}
\alias{tidy.gresults}
\title{Tidy results from grid_apply or dgraph}
\usage{
tidy(x, ...)

\method{tidy}{gresults}(x, arg_grid = NULL, stack = FALSE, .reps = NULL,
  ...)
}
\arguments{
\item{x}{results from \code{grid_apply} or \code{collect}}

\item{...}{additional arguments passed to either \code{tidy.gresults} or
\code{tidy.dgraph}}

\item{arg_grid}{argument grid; if NULL (default) looks for arg_grid
as an attribute to \code{x}}

\item{stack}{if \code{TRUE} (default) stack results into \code{key, value} pairs. Otherwise, \code{bind_rows} is used.}

\item{.reps}{scalar or vector of completed replications for each job (usually given via \code{collect})}
}
\value{
Returns results as a \code{data.frame} in long form with
 the following columns:
\item{...}{Columns corresponding to grid of parameters given in
\code{expand.grid(...)}}
\item{\code{rep}}{the replication number}
\item{\code{value}}{the value of \code{f} at a set of parameters}
}
\description{
Merges the results of \code{grid_apply} with the argument grid, with multiple return values
as separate columns.
}
\details{
If results are of varying length, it can be useful to 'stack'
them into \code{key, value} pairs by setting \code{stack=TRUE}.
When stacking, vectors ar mapped to a single key and data frames are mapped to two keys (rownames and column names).
If the results are unnamed, names are assigned as in \code{as.data.frame}.
See \code{\link{stack_list}} for
further details.
}
\section{Methods (by class)}{
\itemize{
\item \code{gresults}: Tidy an object from \code{grid_apply} or \code{collect}
}}
\seealso{
\code{\link{stack_list}}
}

